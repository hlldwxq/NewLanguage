import os 
import re

JAVASIGN = "Java time"
CPPSIGN = "cpp time"
RUSTSIGN = "rust time"
QSIGN = "q time"
QOPTSIGN = "q opt time"

logPost = ".log"
paths = ["tests/benchmark/CPP/out","tests/benchmark/Java/out"]

rep = 5

ndy = "ndy"
dy = "dy"

javadata = {}
javandy = {}
cppdata = {}
cppndy = {}

def printTxt(dataFile, dateDic, dyOrNot):
    f = open(dataFile,'w')
    
    dateDic = dateDic[dyOrNot]
    for key in dateDic:
        f.write(key + "\n")

        newDic = dateDic[key]
        for newkey in newDic:
            f.write( "%-15s" % (newkey + ": ") )

            sum = 0  
            count = 0
            for num in newDic[newkey]:
                f.write( "%-10.2f" % float(num) )
                sum = sum + float(num)
                count = count + 1
            
            f.write("%-5s%-20.2f\n" % ("avg:", sum/count))  
        f.write("\n")  

    f.close()

def getDic(dataDic, fileRead, SIGN, file):
    time = []
    i = 0
    while i < rep:
        timeline = fileRead.readline()
        list = re.findall(r"\d+\.?\d*", timeline)
        
        if len(list)==1:
            time.append(list[0])
        i = i + 1
    if not (dataDic.has_key(file)):
        dataDic[file] = {}
    fileDic = dataDic[file]
    fileDic[SIGN] = time

def getData( dataDic , path, COMPSIGN):
    for file in os.listdir(path):  
        if logPost in file:
            file_path = os.path.join(path, file)
            file = file.split('.')[0] + '.' +file.split('.')[1]
            fileRead = open(file_path) 
            while 1:
                line = fileRead.readline()
                if ".ndy" in file:
                    if not (dataDic.has_key(ndy)):
                        dataDic[ndy] = {}
                    dic = dataDic[ndy]
                else:
                    if not (dataDic.has_key(dy)):
                        dataDic[dy] = {}
                    dic = dataDic[dy]
                if not line:
                    break
                if COMPSIGN in line:
                    getDic(dic, fileRead, COMPSIGN, file)
                if QSIGN in line:
                    getDic(dic, fileRead, QSIGN, file)
                if QOPTSIGN in line:
                    getDic(dic, fileRead, QOPTSIGN, file)

            fileRead.close()



for path in paths:
    if "CPP" in path :
        getData( cppdata , path, CPPSIGN)
    if "Java" in path:
        getData( javadata , path, JAVASIGN)



dataFile = "diagramJavady.txt"
printTxt(dataFile, javadata, dy)

dataFile = "diagramJavandy.txt"
printTxt(dataFile, javadata, ndy)

dataFile = "diagramCppdy.txt"
printTxt(dataFile, cppdata, dy)

dataFile = "diagramCppndy.txt"
printTxt(dataFile, cppdata, ndy)
